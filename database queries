CREATE DATABASE mydb;

USE mydb;

CREATE TABLE customers (
id VARCHAR(100) NOT NULL PRIMARY KEY,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
company VARCHAR(30) DEFAULT NULL,
department VARCHAR(60) DEFAULT NULL,
address VARCHAR(60) DEFAULT NULL,
postalCode VARCHAR(60) DEFAULT NULL,
city VARCHAR(60) DEFAULT NULL,
state INT(10) DEFAULT NULL
);

CREATE TABLE settings (
customerid VARCHAR(100) NOT NULL,
settingsKey VARCHAR(30) NOT NULL,
settingsValue VARCHAR(30) NOT NULL
);

CREATE TABLE users (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerid VARCHAR(100) DEFAULT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
username VARCHAR(30) DEFAULT NULL,
password VARCHAR(60),
isAdmin INT(5) DEFAULT NULL,
salutation INT(5) DEFAULT NULL,
title INT(5) DEFAULT NULL,
name VARCHAR(60) DEFAULT NULL,
surname VARCHAR(100) DEFAULT NULL,
position VARCHAR(60) DEFAULT NULL,
phone VARCHAR(30) DEFAULT NULL,
email VARCHAR(100) DEFAULT NULL,
validFrom DATETIME,
validTill DATETIME,
FOREIGN KEY (customerid) REFERENCES customers(id)
);




CREATE TABLE holidays (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerid VARCHAR(100) DEFAULT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
name VARCHAR(60),
state INT(10) DEFAULT NULL,
date DATETIME DEFAULT NULL
);


CREATE TABLE departments (
customerid VARCHAR(100) DEFAULT NULL,
id VARCHAR(100) NOT NULL PRIMARY KEY,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
name VARCHAR(60),
startRecording DATETIME DEFAULT NULL,
endRecording DATETIME DEFAULT NULL,
FOREIGN KEY (customerid) REFERENCES customers(id)
);


CREATE TABLE userDepartmentRels (
id INT AUTO_INCREMENT PRIMARY KEY,
customerId VARCHAR(100) DEFAULT NULL,
userId VARCHAR(100) NOT NULL,
departmentId VARCHAR(100) NOT NULL
);

CREATE TABLE services (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerid VARCHAR(100) DEFAULT NULL,
departmentid VARCHAR(100) DEFAULT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
name VARCHAR(60),
start INT(24) DEFAULT NULL,
duration INT(24) DEFAULT NULL,
staff INT(5) DEFAULT NULL,
holiday INT(5) DEFAULT NULL,
monday INT(5) DEFAULT NULL,
tuesday INT(5) DEFAULT NULL,
wednesday INT(5) DEFAULT NULL,
thursday INT(5) DEFAULT NULL,
friday INT(5) DEFAULT NULL,
saturday INT(5) DEFAULT NULL,
sunday INT(5) DEFAULT NULL,
FOREIGN KEY (customerid) REFERENCES customers(id)
);


CREATE TABLE dutyTypes (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerid VARCHAR(100) DEFAULT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
name VARCHAR(60) DEFAULT NULL,
FOREIGN KEY (customerid) REFERENCES customers(id)
);


CREATE TABLE dutyTypeServiceRels (
id INT AUTO_INCREMENT PRIMARY KEY,
customerId VARCHAR(100) DEFAULT NULL,
dutyTypeId VARCHAR(100) NOT NULL,
serviceId VARCHAR(100) NOT NULL
);


CREATE TABLE performedServices (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerId VARCHAR(100) DEFAULT NULL,
userId VARCHAR(100) NOT NULL,
serviceId VARCHAR(100) NOT NULL,
dutyTypeId VARCHAR(100) NOT NULL,
departmentId VARCHAR(100) NOT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
scheduledStart DATETIME DEFAULT NULL,
actualStart DATETIME DEFAULT NULL,
duration INT(24) DEFAULT NULL,
isHoliday INT(5) DEFAULT NULL,
leadInMinutes INT(24) DEFAULT NULL,
leadOutMinutes INT(24) DEFAULT NULL,
FOREIGN KEY (userId) REFERENCES users(id),
FOREIGN KEY (dutyTypeId) REFERENCES dutyTypes(id),
FOREIGN KEY (serviceId) REFERENCES services(id),
minsBefore INT(24) DEFAULT NULL,
minsDuring INT(24) DEFAULT NULL,
minsAfter INT(24) DEFAULT NULL,
percToBefore FLOAT DEFAULT NULL,
percToDuring FLOAT DEFAULT NULL,
percToAfter FLOAT DEFAULT NULL,
FOREIGN KEY (customerId) REFERENCES customers(id)
);

CREATE TABLE schedules (
id VARCHAR(100) NOT NULL PRIMARY KEY,
customerid VARCHAR(100) DEFAULT NULL,
serviceid VARCHAR(100) NOT NULL,
dateDeactivated DATETIME DEFAULT NULL,
lastModified DATETIME,
FOREIGN KEY (serviceid) REFERENCES services(id),
start INT(24) DEFAULT NULL,
duration INT(24) DEFAULT NULL,
staff INT(5) DEFAULT NULL,
date DATETIME DEFAULT NULL,
FOREIGN KEY (customerid) REFERENCES customers(id)
);
